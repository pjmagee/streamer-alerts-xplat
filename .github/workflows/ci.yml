name: CI (build & test)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [24] # Focus on LTS version for CI

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Cache Puppeteer Chrome (workspace)
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/chrome
          key: puppeteer-chrome-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            puppeteer-chrome-${{ runner.os }}-

      - name: Install Chrome (workspace)
        run: npx @puppeteer/browsers install chrome@latest
        env:
          PUPPETEER_CACHE_DIR: ${{ github.workspace }}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss-dev libasound2-dev

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test
        env:
          CI: true
          AUTO_DOWNLOAD_BROWSER: false
          ALLOW_PROJECT_CHROMIUM: false
          PUPPETEER_CACHE_DIR: ${{ github.workspace }}

      # Optional lightweight packaging to ensure build compiles (commented out for speed)
      # - name: Test packaging (Electron Forge lifecycle step)
      #   run: npm run package
      #   timeout-minutes: 10
        
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            logs/
            coverage/
            out/
          retention-days: 7
