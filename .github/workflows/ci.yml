name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [24] # Focus on LTS version for CI

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Cache Puppeteer browsers (Linux)
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: ~/.cache/puppeteer
          key: puppeteer-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            puppeteer-${{ runner.os }}-

      - name: Cache Puppeteer browsers (macOS)
        if: runner.os == 'macOS'
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/puppeteer
          key: puppeteer-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            puppeteer-${{ runner.os }}-

      - name: Determine Windows Puppeteer cache path
        if: runner.os == 'Windows'
        id: win_cache
        shell: bash
        run: |
          echo "cache_dir=$LOCALAPPDATA/puppeteer" >> $GITHUB_OUTPUT

      - name: Cache Puppeteer browsers (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: ${{ steps.win_cache.outputs.cache_dir }}
          key: puppeteer-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            puppeteer-${{ runner.os }}-

      - name: Ensure Chromium installed for tests (Linux)
        if: runner.os == 'Linux'
        run: npx @puppeteer/browsers install chromium@latest --cache-dir ~/.cache/puppeteer
        env:
          PUPPETEER_CACHE_DIR: ~/.cache/puppeteer

      - name: Ensure Chromium installed for tests (macOS)
        if: runner.os == 'macOS'
        run: npx @puppeteer/browsers install chromium@latest --cache-dir ~/Library/Caches/puppeteer
        env:
          PUPPETEER_CACHE_DIR: ~/Library/Caches/puppeteer

      - name: Ensure Chromium installed for tests (Windows)
        if: runner.os == 'Windows'
        run: npx @puppeteer/browsers install chromium@latest --cache-dir ${{ steps.win_cache.outputs.cache_dir }}
        env:
          PUPPETEER_CACHE_DIR: ${{ steps.win_cache.outputs.cache_dir }}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss-dev libasound2-dev

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test
        env:
          CI: true
          AUTO_DOWNLOAD_BROWSER: false
          ALLOW_PROJECT_CHROMIUM: false

      - name: Test packaging (Electron Forge lifecycle step 1)
        run: npm run package
        timeout-minutes: 10
        
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            logs/
            coverage/
            out/
          retention-days: 7
