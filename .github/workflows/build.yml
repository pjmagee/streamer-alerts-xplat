name: Build/release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            platform: darwin
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win32

    env:
      ELECTRON_CACHE: ~/.cache/electron
      ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder
      # Electron Forge debug information
      DEBUG: electron-forge:*

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
            ~/Library/Caches/electron
            ~/Library/Caches/electron-builder
            %USERPROFILE%\AppData\Local\electron\Cache
            %USERPROFILE%\AppData\Local\electron-builder\cache
          key: ${{ runner.os }}-electron-cache-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/Library/Caches/ms-playwright
            %USERPROFILE%\AppData\Local\ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: npm ci

      - name: Verify Electron Forge configuration
        run: |
          echo "Verifying package.json..."
          node -e "
            const pkg = require('./package.json');
            console.log('Package name:', pkg.name);
            console.log('Version:', pkg.version);
            console.log('Main entry:', pkg.main);
            console.log('Scripts available:', Object.keys(pkg.scripts).join(', '));
          "
          echo "Verifying forge config..."
          node -e "
            const fs = require('fs');
            if (fs.existsSync('./forge.config.ts')) {
              console.log('✓ Forge config found: forge.config.ts');
            } else {
              console.error('✗ Forge config not found');
              process.exit(1);
            }
          "

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Install system dependencies (Linux)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss-dev libasound2-dev

      - name: Run tests
        run: npm test
        timeout-minutes: 15

      - name: Run linting
        run: npm run lint

      - name: Build and publish (Electron Forge full lifecycle)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run publish
        timeout-minutes: 30

      - name: Verify build output
        run: |
          echo "Build output directory structure:"
          if [ "$RUNNER_OS" = "Windows" ]; then
            if [ -d "out/make" ]; then
              find out/make -type f -name "*.exe" -o -name "*.msi" -o -name "*.zip" | head -10
            else
              echo "No build output found in out/make/"
            fi
          else
            if [ -d "out/make" ]; then
              find out/make -type f \( -name "*.dmg" -o -name "*.zip" -o -name "*.deb" -o -name "*.rpm" -o -name "*.AppImage" \) | head -10
            else
              echo "No build output found in out/make/"
            fi
          fi
        shell: bash

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.platform }}
          path: |
            out/make/
            !out/make/**/node_modules/
          retention-days: 30

      - name: Upload build logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ matrix.platform }}
          path: |
            logs/
            .vite/
            out/
          retention-days: 7
